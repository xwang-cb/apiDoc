{
  "swagger": "2.0",
  "info": {
    "description": "for all following APIs, it should add 2 parameters at API request header before calling API: X_PROXY_SECRET_TOKEN and AUTHORIZATION, all APIs retrieve current accountDID and UserDID from AUTHORIZATION",
    "version": "1.0.0",
    "title": "Swagger jobs attached with job branding"
  },
  "host": "api.careerbuilder.com",
  "basePath": "/corporate/jobposterapi/JobAttachBrandings",
  "tags": [
    {
      "name": "brandedJobs API",
      "description": "Jobs attached with a job branding"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/brandedJobs": {
      "get": {
        "tags": [
          "brandedJobs API"
        ],
        "summary": "Get jobs attached with a job branding",
        "description": "",
        "operationId": "getJobs",
        "consumes": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "jobBrandingId",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "status",
            "type": "string",
            "enum": [
              "active",
              "inactive"
            ]
          },
          {
            "in": "query",
            "name": "page",
            "required": true,
            "type": "integer",
            "minimum": 1
          },
          {
            "in": "query",
            "name": "page_size",
            "required": true,
            "type": "integer",
            "minimum": 1,
            "maximum": 100
          },
          {
            "in": "query",
            "name": "sortBy",
            "default": "jobTitle",
            "type": "string",
            "enum": [
              "jobTitle",
              "location",
              "status",
              "jobId",
              "expireDate"
            ]
          },
          {
            "in": "query",
            "name": "sortDirection",
            "default": "asc",
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ]
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/LiteJobInfos"
            }
          },
          "400": {
            "description": "Invalid query parameters",
            "schema": {
              "$ref": "#/definitions/ErrApiResponse"
            }
          }
        }
      }
    },
    "/brandedJobs/detach": {
      "post": {
        "tags": [
          "brandedJobs API"
        ],
        "summary": "Detach several jobs from a job branding",
        "description": "",
        "operationId": "detach",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "header",
            "name": "Content-Type",
            "default": "application/json",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "jobDIDs that needs to be detached from a job branding",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OperationRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/OperationResponse"
            }
          },
          "400": {
            "description": "Invalid query parameters",
            "schema": {
              "$ref": "#/definitions/ErrApiResponse"
            }
          }
        }
      }
    }
  },
  "definitions": {
    "LiteJobInfos": {
      "type": "object",
      "properties": {
        "sortBy": {
          "type": "string",
          "example": "Status"
        },
        "sortDirection": {
          "type": "string",
          "example": "Desc"
        },
        "data": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LiteJobInfo"
          }
        },
        "page": {
          "type": "number",
          "example": 1
        },
        "page_size": {
          "type": "number",
          "example": 20
        },
        "total": {
          "type": "number",
          "example": 32
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LiteJobInfo": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "example": "JYR2BX5Z0LCGTRLV6G8"
        },
        "title": {
          "type": "string",
          "example": "Property Claims Field Estimator"
        },
        "status": {
          "type": "string",
          "example": "Archived"
        },
        "location": {
          "type": "string",
          "example": "US-NJ-Washington, DC"
        },
        "jobId": {
          "type": "string",
          "example": "ASDF-ASDF-AG"
        },
        "expireDate": {
          "type": "string",
          "example": "07/13/2016"
        }
      }
    },
    "ErrApiResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "items": {
            "type": "string",
            "example": "jobBrandingId is required"
          }
        },
        "data": {
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    },
    "OperationRequest": {
      "type": "object",
      "required": [
        "jobBrandingId",
        "jobDIDs"
      ],
      "properties": {
        "jobBrandingId": {
          "type": "string",
          "example": "JBJH6RZ6P98YDXYV77ZQ"
        },
        "jobDIDs": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "example": [
            "JHP7796JVM94DQ0DCYP",
            "J8J3Z86WWHWN49S1W5H",
            "JGW0R365X7L47GVRFM1"
          ]
        }
      }
    },
    "OperationResponse": {
      "type": "object",
      "properties": {
        "data": {
          "type": "object",
          "properties": {
            "jobDIDsOperatedSucc": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "JHP7796JVM94DQ0DCYP",
                "J8J3Z86WWHWN49S1W5H"
              ]
            },
            "jobDIDsOperatedFail": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": [
                "JGW0R365X7L47GVRFM1"
              ]
            }
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
  }
}